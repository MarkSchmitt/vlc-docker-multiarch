language: python

sudo: false

matrix:
    include:
        - stage: build_docker
          name: amd64 docker build
          services:
            - docker
          script:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            - docker build -f Dockerfile --tag=${DOCKER_REPO}:${TRAVIS_COMMIT}-amd64 .
            - docker push ${DOCKER_REPO}:${TRAVIS_COMMIT}-amd64
          on:
            condition: '"${BUILD_DOCKER}" = 1'
        - stage: build_docker
          name: arm64v8 docker build
          services:
            - docker
          script:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            # travis_wait 60 tells travis to wait for up to 60 minutes - default is 20, which is too short
            - travis_wait 60 docker build -f Dockerfile --tag=${DOCKER_REPO}:${TRAVIS_COMMIT}-arm64v8 .
            - docker push ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm64v8
          arch: arm64
          on:
            condition: '"${BUILD_DOCKER}" = 1'
        - stage: build_docker
          name: arm32v7 docker build
          services:
            - docker
          script:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            # register binfmt stuff for qemu-static binaries so we can use userland-emulation
            - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            # replace the multi-arch reference with a specific, arm32v7 version. else docker will use the platform specific one,
            # which is amd64.
            - sed -i 's/FROM alpine:3.10/FROM alpine@sha256:2632d6288d34d7175021683f6e363fa7c0fa8866a565eb285e36e3b856545e82/g' Dockerfile
            # travis_wait 60 tells travis to wait for up to 60 minutes - default is 20, which is too short
            - travis_wait 60 docker build -f Dockerfile --tag=${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v7 .
            - docker push ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v7
          on:
            condition: '"${BUILD_DOCKER}" = 1'
        - stage: build_docker
          name: arm32v6 docker build # arm32v6 f.e. old raspberry pi (1 and zero)
          services:
            - docker
          script:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            # register binfmt stuff for qemu-static binaries so we can use userland-emulation
            - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            # replace the multi-arch reference with a specific, arm32v6 version. else docker will use the platform specific one,
            # which is amd64.
            - sed -i 's/FROM alpine:3.10/FROM alpine@sha256:9afbfccb806687f6979661622f0c04dc534769e742465b107f84a830cbb8e77a/g' Dockerfile
            # travis_wait 60 tells travis to wait for up to 60 minutes - default is 20, which is too short
            - travis_wait 60 docker build -f Dockerfile --tag=${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v6 .
            - docker push ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v6
          on:
            condition: '"${BUILD_DOCKER}" = 1'
        - stage: publish_manifest
          env:
            - DOCKER_CLI_EXPERIMENTAL=enabled # required for manifest support
          services:
            - docker
          script:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            - docker manifest create ${DOCKER_REPO}:${TRAVIS_COMMIT} ${DOCKER_REPO}:${TRAVIS_COMMIT}-amd64 ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm64v8 ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v7 ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v6
            - docker manifest annotate ${DOCKER_REPO}:${TRAVIS_COMMIT} ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v6 --os linux --arch arm --variant v6
            - docker manifest annotate ${DOCKER_REPO}:${TRAVIS_COMMIT} ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v7 --os linux --arch arm --variant v7
            - docker manifest annotate ${DOCKER_REPO}:${TRAVIS_COMMIT} ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm64v8 --os linux --arch arm64 --variant v8
            - docker manifest push --purge ${DOCKER_REPO}:${TRAVIS_COMMIT}
            - |
              if [ "${TRAVIS_BRANCH}" = "master" ]; then
                echo "Master branch detected"
                DOCKER_TAG="latest"
              else
                DOCKER_TAG=${TRAVIS_TAG}
              fi
            - |
              if [ "${DOCKER_TAG}" != "" ]; then
                echo "Create Tag ${DOCKER_TAG}"
                docker manifest create ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${TRAVIS_COMMIT}-amd64 ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm64v8 ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v7 ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v6
                docker manifest annotate ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v6 --os linux --arch arm --variant v6
                docker manifest annotate ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm32v7 --os linux --arch arm --variant v7
                docker manifest annotate ${DOCKER_REPO}:${DOCKER_TAG} ${DOCKER_REPO}:${TRAVIS_COMMIT}-arm64v8 --os linux --arch arm64 --variant v8
                docker manifest push --purge ${DOCKER_REPO}:${DOCKER_TAG}
              else
                echo "Not a tag and not on master, so not pushing tag/master specific manifest"
              fi
          on:
            condition: '"${BUILD_DOCKER}" = 1'